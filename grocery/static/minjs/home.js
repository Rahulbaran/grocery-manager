"use strict";const loadingSpinner=document.querySelector(".loading__spinner"),spinnerContainer=document.querySelector(".loading__spinner__container"),tableBody=document.querySelector(".order__table tbody"),totalAmount=document.querySelector("tfoot td span"),firstOrder=document.querySelector(".order__table tbody tr:first-child");let counter=20;const loadOrders=e=>{if(e[0].isIntersecting){const e=async e=>{const t=`/loadOrders?c=${e}`,n=await fetch(t,{mode:"same-origin",method:"get",cache:"no-cache"});if(200===n.status)return await n.json();throw Error("Did not get the expected response")};e(counter).then((e=>{if(!e.orders.length){spinnerContainer.removeChild(spinnerContainer.firstElementChild);const e=document.createElement("p");return e.setAttribute("class","noMoreOrder"),e.textContent="No more Orders",spinnerContainer.append(e),void observer.unobserve(loadingSpinner)}for(let t of e.orders){const e=document.querySelector(".order__table tbody tr:last-child td:first-child").textContent,n=firstOrder.cloneNode(!0),r=n.children;r[0].textContent=+e+1,r[1].textContent=t.customer,r[2].textContent=t.date,r[3].textContent=t.total,tableBody.appendChild(n)}counter+=20;const t=Number(totalAmount.textContent);totalAmount.textContent=`${e.totalPrice+t}`})).catch(console.error)}},observer=new IntersectionObserver(loadOrders);loadingSpinner&&observer.observe(loadingSpinner);const productsPageLink=document.querySelector(".manage__products__link"),ordersPageLink=document.querySelector(".new__order__link"),mediaQuery=window.matchMedia("screen and (max-width:480px)");mediaQuery.addListener((e=>{e.matches?(productsPageLink.textContent="Products",ordersPageLink.textContent="Orders"):(productsPageLink.textContent="Manage Products",ordersPageLink.textContent="Manage Orders")})),window.onload=e=>{e.currentTarget.innerWidth<=480&&(productsPageLink.textContent="Products",ordersPageLink.textContent="Orders")};
//# sourceMappingURL=home.js.map
